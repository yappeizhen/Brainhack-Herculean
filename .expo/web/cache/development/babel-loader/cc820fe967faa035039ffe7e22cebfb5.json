{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/vishesh/Desktop/NUS/SEP:NOC/BrainHack/hackathon/App.js\";\n\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport DocumentPicker from \"react-native-document-picker\";\n\nvar App = function App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      singleFile = _useState2[0],\n      setSingleFile = _useState2[1];\n\n  var uploadImage = function uploadImage() {\n    var fileToUpload, data, res, responseJson;\n    return _regeneratorRuntime.async(function uploadImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(singleFile != null)) {\n              _context.next = 14;\n              break;\n            }\n\n            fileToUpload = singleFile;\n            data = new FormData();\n            data.append(\"name\", \"Image Upload\");\n            data.append(\"file_attachment\", fileToUpload);\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(fetch(\"http://localhost/upload.php\", {\n              method: \"post\",\n              body: data,\n              headers: {\n                \"Content-Type\": \"multipart/form-data; \"\n              }\n            }));\n\n          case 7:\n            res = _context.sent;\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(res.json());\n\n          case 10:\n            responseJson = _context.sent;\n\n            if (responseJson.status == 1) {\n              alert(\"Upload Successful\");\n            }\n\n            _context.next = 15;\n            break;\n\n          case 14:\n            alert(\"Please Select File first\");\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var selectFile = function selectFile() {\n    var res;\n    return _regeneratorRuntime.async(function selectFile$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(DocumentPicker.pick({\n              type: [DocumentPicker.types.allFiles]\n            }));\n\n          case 3:\n            res = _context2.sent;\n            console.log(\"res : \" + JSON.stringify(res));\n            setSingleFile(res);\n            _context2.next = 17;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](0);\n            setSingleFile(null);\n\n            if (!DocumentPicker.isCancel(_context2.t0)) {\n              _context2.next = 15;\n              break;\n            }\n\n            alert(\"Canceled\");\n            _context2.next = 17;\n            break;\n\n          case 15:\n            alert(\"Unknown Error: \" + JSON.stringify(_context2.t0));\n            throw _context2.t0;\n\n          case 17:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.mainBody,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 30,\n      textAlign: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"React Native File Upload Example\"), React.createElement(Text, {\n    style: {\n      fontSize: 25,\n      marginTop: 20,\n      marginBottom: 30,\n      textAlign: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"www.aboutreact.com\")), singleFile != null ? React.createElement(Text, {\n    style: styles.textStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, \"File Name: \", singleFile.name ? singleFile.name : \"\", \"\\n\", \"Type: \", singleFile.type ? singleFile.type : \"\", \"\\n\", \"File Size: \", singleFile.size ? singleFile.size : \"\", \"\\n\", \"URI: \", singleFile.uri ? singleFile.uri : \"\", \"\\n\") : null, React.createElement(TouchableOpacity, {\n    style: styles.buttonStyle,\n    activeOpacity: 0.5,\n    onPress: selectFile,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonTextStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, \"Select File\")), React.createElement(TouchableOpacity, {\n    style: styles.buttonStyle,\n    activeOpacity: 0.5,\n    onPress: uploadImage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonTextStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, \"Upload File\")));\n};\n\nvar styles = StyleSheet.create({\n  mainBody: {\n    flex: 1,\n    justifyContent: \"center\",\n    padding: 20\n  },\n  buttonStyle: {\n    backgroundColor: \"#307ecc\",\n    borderWidth: 0,\n    color: \"#FFFFFF\",\n    borderColor: \"#307ecc\",\n    height: 40,\n    alignItems: \"center\",\n    borderRadius: 30,\n    marginLeft: 35,\n    marginRight: 35,\n    marginTop: 15\n  },\n  buttonTextStyle: {\n    color: \"#FFFFFF\",\n    paddingVertical: 10,\n    fontSize: 16\n  },\n  textStyle: {\n    backgroundColor: \"#fff\",\n    fontSize: 15,\n    marginTop: 16,\n    marginLeft: 35,\n    marginRight: 35,\n    textAlign: \"center\"\n  }\n});\nexport default App;","map":{"version":3,"sources":["/Users/vishesh/Desktop/NUS/SEP:NOC/BrainHack/hackathon/App.js"],"names":["React","useState","DocumentPicker","App","singleFile","setSingleFile","uploadImage","fileToUpload","data","FormData","append","fetch","method","body","headers","res","json","responseJson","status","alert","selectFile","pick","type","types","allFiles","console","log","JSON","stringify","isCancel","styles","mainBody","alignItems","fontSize","textAlign","marginTop","marginBottom","textStyle","name","size","uri","buttonStyle","buttonTextStyle","StyleSheet","create","flex","justifyContent","padding","backgroundColor","borderWidth","color","borderColor","height","borderRadius","marginLeft","marginRight","paddingVertical"],"mappings":"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","sourcesContent":["// Example to Pick and Upload files in React Native\n// https://aboutreact.com/file-uploading-in-react-native/\n\n// Import React\nimport React, { useState } from \"react\";\n// Import core components\nimport { StyleSheet, Text, View, TouchableOpacity } from \"react-native\";\n\n// Import Document Picker\nimport DocumentPicker from \"react-native-document-picker\";\n\nconst App = () => {\n  const [singleFile, setSingleFile] = useState(null);\n\n  const uploadImage = async () => {\n    // Check if any file is selected or not\n    if (singleFile != null) {\n      // If file selected then create FormData\n      const fileToUpload = singleFile;\n      const data = new FormData();\n      data.append(\"name\", \"Image Upload\");\n      data.append(\"file_attachment\", fileToUpload);\n      // Please change file upload URL\n      let res = await fetch(\"http://localhost/upload.php\", {\n        method: \"post\",\n        body: data,\n        headers: {\n          \"Content-Type\": \"multipart/form-data; \",\n        },\n      });\n      let responseJson = await res.json();\n      if (responseJson.status == 1) {\n        alert(\"Upload Successful\");\n      }\n    } else {\n      // If no file selected the show alert\n      alert(\"Please Select File first\");\n    }\n  };\n\n  const selectFile = async () => {\n    // Opening Document Picker to select one file\n    try {\n      const res = await DocumentPicker.pick({\n        // Provide which type of file you want user to pick\n        type: [DocumentPicker.types.allFiles],\n        // There can me more options as well\n        // DocumentPicker.types.allFiles\n        // DocumentPicker.types.images\n        // DocumentPicker.types.plainText\n        // DocumentPicker.types.audio\n        // DocumentPicker.types.pdf\n      });\n      // Printing the log realted to the file\n      console.log(\"res : \" + JSON.stringify(res));\n      // Setting the state to show single file attributes\n      setSingleFile(res);\n    } catch (err) {\n      setSingleFile(null);\n      // Handling any exception (If any)\n      if (DocumentPicker.isCancel(err)) {\n        // If user canceled the document selection\n        alert(\"Canceled\");\n      } else {\n        // For Unknown Error\n        alert(\"Unknown Error: \" + JSON.stringify(err));\n        throw err;\n      }\n    }\n  };\n  return (\n    <View style={styles.mainBody}>\n      <View style={{ alignItems: \"center\" }}>\n        <Text style={{ fontSize: 30, textAlign: \"center\" }}>\n          React Native File Upload Example\n        </Text>\n        <Text\n          style={{\n            fontSize: 25,\n            marginTop: 20,\n            marginBottom: 30,\n            textAlign: \"center\",\n          }}\n        >\n          www.aboutreact.com\n        </Text>\n      </View>\n      {/*Showing the data of selected Single file*/}\n      {singleFile != null ? (\n        <Text style={styles.textStyle}>\n          File Name: {singleFile.name ? singleFile.name : \"\"}\n          {\"\\n\"}\n          Type: {singleFile.type ? singleFile.type : \"\"}\n          {\"\\n\"}\n          File Size: {singleFile.size ? singleFile.size : \"\"}\n          {\"\\n\"}\n          URI: {singleFile.uri ? singleFile.uri : \"\"}\n          {\"\\n\"}\n        </Text>\n      ) : null}\n      <TouchableOpacity\n        style={styles.buttonStyle}\n        activeOpacity={0.5}\n        onPress={selectFile}\n      >\n        <Text style={styles.buttonTextStyle}>Select File</Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={styles.buttonStyle}\n        activeOpacity={0.5}\n        onPress={uploadImage}\n      >\n        <Text style={styles.buttonTextStyle}>Upload File</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  mainBody: {\n    flex: 1,\n    justifyContent: \"center\",\n    padding: 20,\n  },\n  buttonStyle: {\n    backgroundColor: \"#307ecc\",\n    borderWidth: 0,\n    color: \"#FFFFFF\",\n    borderColor: \"#307ecc\",\n    height: 40,\n    alignItems: \"center\",\n    borderRadius: 30,\n    marginLeft: 35,\n    marginRight: 35,\n    marginTop: 15,\n  },\n  buttonTextStyle: {\n    color: \"#FFFFFF\",\n    paddingVertical: 10,\n    fontSize: 16,\n  },\n  textStyle: {\n    backgroundColor: \"#fff\",\n    fontSize: 15,\n    marginTop: 16,\n    marginLeft: 35,\n    marginRight: 35,\n    textAlign: \"center\",\n  },\n});\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}