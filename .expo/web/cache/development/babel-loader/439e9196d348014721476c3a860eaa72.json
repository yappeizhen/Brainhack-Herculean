{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/vishesh/Desktop/NUS/SEP:NOC/BrainHack/hackathon/src/screens/Destinations.js\";\n\nimport * as React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Appbar, Chip, Divider, Card, Title, Subheading, Paragraph, Caption } from \"react-native-paper\";\nimport { regions, asiaDataSet, europeDataSet } from \"./../assets/data/destinationData\";\n\nvar DestinationsRoute = function DestinationsRoute() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedRegion = _useState2[0],\n      setSelectedRegion = _useState2[1];\n\n  var _useState3 = useState(asiaDataSet),\n      _useState4 = _slicedToArray(_useState3, 2),\n      countrySet = _useState4[0],\n      setCountrySet = _useState4[1];\n\n  var handleSelectRegion = function handleSelectRegion(region) {\n    setSelectedRegion(region);\n\n    if (region.name === \"Asia\") {\n      setCountrySet(asiaDataSet);\n    } else {\n      setCountrySet(europeDataSet);\n    }\n  };\n\n  var regionsDisplay = regions.map(function (region) {\n    var regionChipStyle = selectedRegion === region ? styles.selectedChip : styles.unselectedChip;\n    return React.createElement(Chip, {\n      key: region.name,\n      style: regionChipStyle,\n      icon: \"chart-bell-curve\",\n      mode: \"outlined\",\n      onPress: function onPress() {\n        return handleSelectRegion(region);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, region.name);\n  });\n  var countryDataDisplay = countrySet.map(function (country) {\n    var sign = country.casePercentageChange <= 0 ? \"\" : \"+\";\n    var coloredStyle = country.casePercentageChange <= 0 ? styles.greenDataUnits : styles.redDataUnits;\n    return React.createElement(Card, {\n      key: country.name,\n      style: styles.topicCard,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, React.createElement(Subheading, {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, country.name), React.createElement(Divider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }), React.createElement(View, {\n      style: styles.changeRate,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, React.createElement(Paragraph, {\n      style: coloredStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, sign, country.casePercentageChange, \"%\")), React.createElement(View, {\n      style: styles.dataPair,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, React.createElement(Subheading, {\n      style: styles.dataValue,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, country.casesPerDay), React.createElement(Paragraph, {\n      style: styles.dataUnits,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, \"Cases /day\")), React.createElement(View, {\n      style: styles.dataPair,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, React.createElement(Subheading, {\n      style: styles.dataValue,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, country.deathsPerDay), React.createElement(Paragraph, {\n      style: styles.dataUnits,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, \"Deaths /day\")), React.createElement(View, {\n      style: styles.dataPair,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, React.createElement(Subheading, {\n      style: styles.dataValue,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, country.percentageVaccinated, \"%\"), React.createElement(Paragraph, {\n      style: styles.dataUnits,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, \"Vaccinated\")));\n  });\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, React.createElement(Appbar.Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, React.createElement(Appbar.Content, {\n    title: \"World Updates\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }), React.createElement(Appbar.Action, {\n    icon: \"magnify\",\n    onPress: function onPress() {\n      return console.log(\"Search places\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.section,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, regionsDisplay), React.createElement(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }), React.createElement(ScrollView, {\n    contentContainerStyle: styles.scrollableSection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, React.createElement(Title, {\n    style: {\n      width: \"100%\",\n      paddingLeft: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, \"Countries\"), countryDataDisplay));\n};\n\nexport default DestinationsRoute;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"column\"\n  },\n  unselectedChip: {\n    backgroundColor: \"#f2f0e1\",\n    borderColor: \"#FBA200\",\n    margin: 3\n  },\n  selectedChip: {\n    backgroundColor: \"#f2c9f0\",\n    borderColor: \"#db9cd7\",\n    borderWidth: 2,\n    margin: 3\n  },\n  section: {\n    padding: 20,\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    paddingTop: 10\n  },\n  scrollableSection: {\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    paddingTop: 10\n  },\n  topicCard: {\n    flexDirection: \"row\",\n    padding: \"3%\",\n    width: \"40%\",\n    height: 200,\n    marginLeft: \"6%\",\n    marginBottom: \"5%\",\n    marginTop: 5,\n    borderColor: \"black\",\n    borderWidth: 8\n  },\n  dataPair: {\n    width: \"100%\",\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    paddingTop: 5\n  },\n  dataValue: {\n    alignItems: \"center\",\n    fontWeight: \"700\",\n    paddingRight: 10\n  },\n  dataUnits: {\n    paddingTop: 2,\n    fontSize: 12\n  },\n  redDataUnits: {\n    paddingTop: 2,\n    fontSize: 12,\n    color: \"#e60000\"\n  },\n  greenDataUnits: {\n    paddingTop: 2,\n    fontSize: 12,\n    color: \"#00b300\"\n  },\n  changeRate: {\n    alignItems: \"flex-end\",\n    marginBottom: -5,\n    marginRight: 50,\n    paddingTop: 8\n  }\n});","map":{"version":3,"sources":["/Users/vishesh/Desktop/NUS/SEP:NOC/BrainHack/hackathon/src/screens/Destinations.js"],"names":["React","useState","useEffect","Appbar","Chip","Divider","Card","Title","Subheading","Paragraph","Caption","regions","asiaDataSet","europeDataSet","DestinationsRoute","selectedRegion","setSelectedRegion","countrySet","setCountrySet","handleSelectRegion","region","name","regionsDisplay","map","regionChipStyle","styles","selectedChip","unselectedChip","countryDataDisplay","country","sign","casePercentageChange","coloredStyle","greenDataUnits","redDataUnits","topicCard","textAlign","changeRate","dataPair","dataValue","casesPerDay","dataUnits","deathsPerDay","percentageVaccinated","flex","console","log","section","scrollableSection","width","paddingLeft","StyleSheet","create","container","alignItems","justifyContent","flexDirection","backgroundColor","borderColor","margin","borderWidth","padding","flexWrap","paddingTop","height","marginLeft","marginBottom","marginTop","fontWeight","paddingRight","fontSize","color","marginRight"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { ScrollView, View, StyleSheet } from \"react-native\";\nimport {\n  Appbar,\n  Chip,\n  Divider,\n  Card,\n  Title,\n  Subheading,\n  Paragraph,\n  Caption,\n} from \"react-native-paper\";\nimport {\n  regions,\n  asiaDataSet,\n  europeDataSet,\n} from \"./../assets/data/destinationData\";\n\nconst DestinationsRoute = () => {\n  const [selectedRegion, setSelectedRegion] = useState();\n  const [countrySet, setCountrySet] = useState(asiaDataSet);\n\n  const handleSelectRegion = (region) => {\n    setSelectedRegion(region);\n    if (region.name === \"Asia\") {\n      setCountrySet(asiaDataSet);\n    } else {\n      setCountrySet(europeDataSet);\n    }\n  };\n\n  let regionsDisplay = regions.map((region) => {\n    const regionChipStyle =\n      selectedRegion === region ? styles.selectedChip : styles.unselectedChip;\n    return (\n      <Chip\n        key={region.name}\n        style={regionChipStyle}\n        icon=\"chart-bell-curve\"\n        mode=\"outlined\"\n        onPress={() => handleSelectRegion(region)}\n      >\n        {region.name}\n      </Chip>\n    );\n  });\n\n  const countryDataDisplay = countrySet.map((country) => {\n    let sign = country.casePercentageChange <= 0 ? \"\" : \"+\";\n    let coloredStyle =\n      country.casePercentageChange <= 0\n        ? styles.greenDataUnits\n        : styles.redDataUnits;\n    return (\n      <Card key={country.name} style={styles.topicCard}>\n        <Subheading style={{ textAlign: \"center\" }}>{country.name}</Subheading>\n        <Divider />\n        <View style={styles.changeRate}>\n          <Paragraph style={coloredStyle}>\n            {sign}\n            {country.casePercentageChange}%\n          </Paragraph>\n        </View>\n        <View style={styles.dataPair}>\n          <Subheading style={styles.dataValue}>\n            {country.casesPerDay}\n          </Subheading>\n          <Paragraph style={styles.dataUnits}>Cases /day</Paragraph>\n        </View>\n        <View style={styles.dataPair}>\n          <Subheading style={styles.dataValue}>\n            {country.deathsPerDay}\n          </Subheading>\n          <Paragraph style={styles.dataUnits}>Deaths /day</Paragraph>\n        </View>\n        <View style={styles.dataPair}>\n          <Subheading style={styles.dataValue}>\n            {country.percentageVaccinated}%\n          </Subheading>\n          <Paragraph style={styles.dataUnits}>Vaccinated</Paragraph>\n        </View>\n      </Card>\n    );\n  });\n\n  return (\n    <View style={{ flex: 1 }}>\n      <Appbar.Header>\n        <Appbar.Content title=\"World Updates\" />\n        <Appbar.Action\n          icon=\"magnify\"\n          onPress={() => console.log(\"Search places\")}\n        />\n      </Appbar.Header>\n      <View style={styles.section}>\n        {regionsDisplay}\n        {/* <Chip style={styles.unselectedChip} icon=\"chart-bell-curve\" mode=\"outlined\" onPress={() => console.log('Pressed Chip')}>Economics</Chip>\n        <Chip style={styles.selectedChip} icon=\"xml\" mode=\"outlined\" onPress={() => console.log('Pressed Chip')}>Computer Science</Chip>\n        <Chip style={styles.unselectedChip} icon=\"hammer-screwdriver\" mode=\"outlined\" onPress={() => console.log('Pressed Chip')}>Mechanical Engineering</Chip> */}\n      </View>\n      <Divider />\n      <ScrollView contentContainerStyle={styles.scrollableSection}>\n        <Title style={{ width: \"100%\", paddingLeft: 20 }}>Countries</Title>\n        {countryDataDisplay}\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default DestinationsRoute;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n  },\n  unselectedChip: {\n    backgroundColor: \"#f2f0e1\",\n    borderColor: `#FBA200`,\n    margin: 3,\n  },\n  selectedChip: {\n    backgroundColor: \"#f2c9f0\",\n    borderColor: `#db9cd7`,\n    borderWidth: 2,\n    margin: 3,\n  },\n  section: {\n    padding: 20,\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    paddingTop: 10,\n  },\n  scrollableSection: {\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    paddingTop: 10,\n  },\n  topicCard: {\n    flexDirection: \"row\",\n    padding: \"3%\",\n    width: \"40%\",\n    height: 200,\n    marginLeft: \"6%\",\n    marginBottom: \"5%\",\n    marginTop: 5,\n    borderColor: \"black\",\n    borderWidth: 8,\n  },\n  dataPair: {\n    width: \"100%\",\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    paddingTop: 5,\n  },\n  dataValue: {\n    alignItems: \"center\",\n    fontWeight: \"700\",\n    paddingRight: 10,\n  },\n  dataUnits: {\n    paddingTop: 2,\n    fontSize: 12,\n  },\n  redDataUnits: {\n    paddingTop: 2,\n    fontSize: 12,\n    color: \"#e60000\",\n  },\n  greenDataUnits: {\n    paddingTop: 2,\n    fontSize: 12,\n    color: \"#00b300\",\n  },\n  changeRate: {\n    alignItems: \"flex-end\",\n    marginBottom: -5,\n    marginRight: 50,\n    paddingTop: 8,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}